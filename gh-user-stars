#!/bin/bash
set -euo pipefail

help() {
  cat <<EOF
Displays an interactive your stars. The selected star is print url.
Dependencies: fzf

Usage
  gh user-stars [NUMBER]

NUMBER: Number of stars to display (default: 30)
EOF
}

number=30

while [ $# -gt 0 ]; do
  case "$1" in
  -h|--help)
    help
    exit 0
    ;;
  *)
    number=$1
  esac
  shift
done


list_stars() {
  # shellcheck disable=SC2016
  gh api graphql --cache=5m --paginate -F first="${number}" -f query='
    query($first: Int, $endCursor: String){
      viewer {
        starredRepositories(first: $first, after: $endCursor, orderBy: {field: STARRED_AT, direction: DESC}) {
          edges {
            node {
              nameWithOwner
              url
            }
            starredAt
          }
        }
      }
    }
    ' --template '
    {{- range $edge := .data.viewer.starredRepositories.edges -}}
      {{- $edge.node.nameWithOwner | printf "%s\t" -}}
      {{- $edge.starredAt | printf "%s\n" -}}
    {{- end -}}
  '
}

tableize() {
  column -t -s$'\t'
}

render() {
  local nameWithOwner starredAt
  all_stars="$(list_stars 2>/dev/null || true)"
  while read nameWithOwner starredAt
  do
    local_starred_at=$(date -r "$(date -u -jf %FT%TZ "${starredAt}" +%s)" +"%F %T")
    printf "%s\t%s\n" "$nameWithOwner" "$local_starred_at"
  done <<< "${all_stars}"
}

choose() {
  render | tableize | fzf --ansi --height 90% --layout=reverse
}

if ! type -p fzf >/dev/null; then
  echo "error: install \`fzf\` to use this command" >&2
  exit 1
fi

selected="$(choose)"
[ -n "$selected" ] || exit 1
echo "https://github.com/${selected%% *}"

